/**
 * @author Joseph Niel Tuazon
 * 
 * This is a single entry point for compiling SASS and BABEL files 
 * using GULP. This plugin is patterned over the Laravel Elixir
 * package. See the resemblance in the package's doc blocks?
 * 
 * This is also where the final production stylesheets and scripts
 * are created. The said files are generated by concatinating
 * and further minifying the files they have originated.
 * 
 * Console commands
 * 
 *  gulp watch:styles 
 *      - for 'auto-compiling'/watching SASS  file changes
 *  gulp watch:scripts 
 *      - for 'auto-compiling'/watching BABEL file changes
 * 
 *  gulp final:styles
 *      - for creating production CSS
 *  gulp final:scripts
 *      - for creating production JS
 * 
 */

var gulp = require('gulp');


var sass = require('gulp-sass');
var sass_task = 'compile:styles';
var sass_src = 'resources/assets/css/sass/**/*.sass';
var sass_dest = 'resources/assets/css';

gulp.task( sass_task, function() {
    gulp.src( sass_src )
        .pipe( sass().on( 'error', sass.logError ) )
        .pipe( gulp.dest( sass_dest ) );
});

gulp.task( 'watch:styles', function() {
    gulp.watch( sass_src, [ sass_task ] );
});


var babel = require('gulp-babel');
var babel_task = 'compile:scripts';
var babel_src = 'resources/assets/js/babel/**/*.js';
var babel_dest = 'resources/assets/js';

gulp.task( babel_task, function() {
    gulp.src( babel_src )
        .pipe( babel({ presets: ['es2015'] }) )
        .pipe( gulp.dest( babel_dest ) );
});

gulp.task( 'watch:scripts', function() {
    gulp.watch( babel_src, [ babel_task ] );
});


var concat = require('gulp-concat');
var js_minify = require('gulp-uglify');
var css_minify = require('gulp-clean-css');
var sourcemaps = require('gulp-sourcemaps');


var public_dest = 'public/';

var scripts_final_task = 'final:scripts';
var scripts_src = 'resources/assets/js/*.js';
var final_script_name = 'app.js';
var scripts_exclude_dir = [ 'resources/asses/js/babel' ];

gulp.task( scripts_final_task, function() {
    gulp.src( scripts_src )
        .pipe( concat( final_script_name ) )
        .pipe( gulp.dest( public_dest ) )
        .pipe( sourcemaps.init() )
        .pipe( js_minify() )
        .pipe( sourcemaps.write( "/" ) )
        .pipe( gulp.dest( public_dest ) )
});

var styles_final_task = 'final:styles';
var styles_src = 'resources/assets/css/*.css';
var final_style_name = 'app.css';

gulp.task( styles_final_task, function() {
    gulp.src( styles_src )
        .pipe( concat( final_style_name ) )
        .pipe( gulp.dest( public_dest ) )
        .pipe( sourcemaps.init() )
        .pipe( css_minify() )
        .pipe( sourcemaps.write( "/" ) )
        .pipe( gulp.dest( public_dest ) );
});